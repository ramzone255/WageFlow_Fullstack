// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WageFlow.Persistence.src.Data;

#nullable disable

namespace WageFlow.Persistence.Migrations
{
    [DbContext(typeof(WageFlowDbContext))]
    partial class WageFlowDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Payments", b =>
                {
                    b.Property<int>("id_payments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payments"));

                    b.Property<float>("amount_payments")
                        .HasMaxLength(20)
                        .HasColumnType("real");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("date_payments")
                        .HasColumnType("date");

                    b.Property<int>("id_payments_type")
                        .HasColumnType("int");

                    b.Property<int>("id_staff")
                        .HasColumnType("int");

                    b.HasKey("id_payments");

                    b.HasIndex("id_payments")
                        .IsUnique();

                    b.HasIndex("id_payments_type");

                    b.HasIndex("id_staff");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Payments_Type", b =>
                {
                    b.Property<int>("id_payments_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payments_type"));

                    b.Property<string>("name_payments_type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id_payments_type");

                    b.HasIndex("id_payments_type")
                        .IsUnique();

                    b.ToTable("Payments_Type");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Post", b =>
                {
                    b.Property<int>("id_post")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_post"));

                    b.Property<string>("name_post")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_post");

                    b.HasIndex("id_post")
                        .IsUnique();

                    b.ToTable("Post");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Salary_Payment", b =>
                {
                    b.Property<int>("id_salary_payment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_salary_payment"));

                    b.Property<float>("amount_salary_payment")
                        .HasMaxLength(20)
                        .HasColumnType("real");

                    b.Property<DateOnly>("date_salary_payment")
                        .HasColumnType("date");

                    b.Property<int>("id_staff")
                        .HasColumnType("int");

                    b.HasKey("id_salary_payment");

                    b.HasIndex("id_salary_payment")
                        .IsUnique();

                    b.HasIndex("id_staff");

                    b.ToTable("Salary_Payment");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Salary_Payment_Payments", b =>
                {
                    b.Property<int>("id_salary_payment_payments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_salary_payment_payments"));

                    b.Property<int>("id_payments")
                        .HasColumnType("int");

                    b.Property<int>("id_salary_payment")
                        .HasColumnType("int");

                    b.HasKey("id_salary_payment_payments");

                    b.HasIndex("id_payments");

                    b.HasIndex("id_salary_payment");

                    b.HasIndex("id_salary_payment_payments")
                        .IsUnique();

                    b.ToTable("Salary_Payment_Payments");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Staff", b =>
                {
                    b.Property<int>("id_staff")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_staff"));

                    b.Property<string>("email_staff")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("id_post")
                        .HasColumnType("int");

                    b.Property<string>("lastname_staff")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name_staff")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("patronymic_staff")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_staff");

                    b.HasIndex("id_post");

                    b.HasIndex("id_staff")
                        .IsUnique();

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.User", b =>
                {
                    b.Property<int>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_user"));

                    b.Property<int>("id_staff")
                        .HasColumnType("int");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id_user");

                    b.HasIndex("id_staff");

                    b.HasIndex("id_user")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Entry", b =>
                {
                    b.Property<int>("id_work_entry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_work_entry"));

                    b.Property<DateOnly>("date_work_entry")
                        .HasColumnType("date");

                    b.Property<int>("id_staff")
                        .HasColumnType("int");

                    b.Property<int>("id_work_type")
                        .HasColumnType("int");

                    b.Property<int>("quantity_work_entry")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("id_work_entry");

                    b.HasIndex("id_staff");

                    b.HasIndex("id_work_entry")
                        .IsUnique();

                    b.HasIndex("id_work_type");

                    b.ToTable("Work_Entry");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Entry_Salary_Payment", b =>
                {
                    b.Property<int>("id_work_entry_salary_payment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_work_entry_salary_payment"));

                    b.Property<int>("id_salary_payment")
                        .HasColumnType("int");

                    b.Property<int>("id_work_entry")
                        .HasColumnType("int");

                    b.HasKey("id_work_entry_salary_payment");

                    b.HasIndex("id_salary_payment");

                    b.HasIndex("id_work_entry");

                    b.HasIndex("id_work_entry_salary_payment")
                        .IsUnique();

                    b.ToTable("Work_Entry_Salary_Payment");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Type", b =>
                {
                    b.Property<int>("id_work_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_work_type"));

                    b.Property<float>("amount_work_type")
                        .HasMaxLength(10)
                        .HasColumnType("real");

                    b.Property<string>("name_work_type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_work_type");

                    b.HasIndex("id_work_type")
                        .IsUnique();

                    b.ToTable("Work_Type");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Payments", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Payments_Type", "Payments_Type")
                        .WithMany("Payments")
                        .HasForeignKey("id_payments_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WageFlow.Domain.src.Entities.Staff", "Staff")
                        .WithMany("Payments")
                        .HasForeignKey("id_staff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payments_Type");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Salary_Payment", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Staff", "Staff")
                        .WithMany("Salary_Payment")
                        .HasForeignKey("id_staff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Salary_Payment_Payments", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Payments", "Payments")
                        .WithMany("Salary_Payment_Payments")
                        .HasForeignKey("id_payments")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WageFlow.Domain.src.Entities.Salary_Payment", "Salary_Payment")
                        .WithMany("Salary_Payment_Payments")
                        .HasForeignKey("id_salary_payment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payments");

                    b.Navigation("Salary_Payment");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Staff", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Post", "Post")
                        .WithMany("Staff")
                        .HasForeignKey("id_post")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.User", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Staff", "Staff")
                        .WithMany("User")
                        .HasForeignKey("id_staff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Entry", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Staff", "Staff")
                        .WithMany("Work_Entry")
                        .HasForeignKey("id_staff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WageFlow.Domain.src.Entities.Work_Type", "Work_Type")
                        .WithMany("Work_Entry")
                        .HasForeignKey("id_work_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("Work_Type");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Entry_Salary_Payment", b =>
                {
                    b.HasOne("WageFlow.Domain.src.Entities.Salary_Payment", "Salary_Payment")
                        .WithMany("Work_Entry_Salary_Payment")
                        .HasForeignKey("id_salary_payment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WageFlow.Domain.src.Entities.Work_Entry", "Work_Entry")
                        .WithMany("Work_Entry_Salary_Payment")
                        .HasForeignKey("id_work_entry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary_Payment");

                    b.Navigation("Work_Entry");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Payments", b =>
                {
                    b.Navigation("Salary_Payment_Payments");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Payments_Type", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Post", b =>
                {
                    b.Navigation("Staff");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Salary_Payment", b =>
                {
                    b.Navigation("Salary_Payment_Payments");

                    b.Navigation("Work_Entry_Salary_Payment");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Staff", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Salary_Payment");

                    b.Navigation("User");

                    b.Navigation("Work_Entry");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Entry", b =>
                {
                    b.Navigation("Work_Entry_Salary_Payment");
                });

            modelBuilder.Entity("WageFlow.Domain.src.Entities.Work_Type", b =>
                {
                    b.Navigation("Work_Entry");
                });
#pragma warning restore 612, 618
        }
    }
}
